defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-26-alpha
  environment:
    JVM_OPTS: -Xmx3200m

version: 2
jobs:
  "Make Dependencies":
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Init Gradle
          command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - persist_to_workspace:
          root: ~/code
          paths:
            - ./*
  "Unit Tests":
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Unit Tests
          command: ./gradlew test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
  "CheckStyle":
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run CkeckStyle
          command: ./gradlew checkstyle
  "FindBugs":
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run FindBugs
          command: ./gradlew findbugs
  "PMD":
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run PMD
          command: ./gradlew pmd
  "Lint":
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Lint
          command: ./gradlew lint test
  "Build App":
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build
          command: ./gradlew clean assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks
      - persist_to_workspace:
          root: ~/code
          paths:
            - ./*
  "Deploy Fabric":
    <<: *defaults
    working_directory: ~/code
    steps:
      - attach_workspace:
          at: ~/code
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - deploy:
          name: Deploy Fabric
          command: bash ~/code/scripts-ci/deploy-fabric.sh
  "Deploy HockeyApp":
    <<: *defaults
    working_directory: ~/code
    steps:
      - attach_workspace:
          at: ~/code
      - deploy:
          name: Deploy HockeyApp
          command: bash ~/code/scripts-ci/deploy-hockey.sh
workflows:
  version: 2
  build:
    jobs:
      - "Make Dependencies"
      - "CheckStyle":
          requires:
            - "Make Dependencies"
      - "PMD":
          requires:
            - "Make Dependencies"
      - "Lint":
          requires:
            - "Make Dependencies"
      - "Unit Tests":
          requires:
            - "Make Dependencies"
      - "Build App":
          requires:
            - "Make Dependencies"
            - "CheckStyle"
            - "PMD"
            - "Lint"
            - "Unit Tests"
      - "FindBugs":
          requires:
            - "Make Dependencies"
            - "Build App"
      - "Deploy Fabric":
          requires:
            - "Make Dependencies"
            - "Build App"
            - "Unit Tests"
            - "CheckStyle"
            - "PMD"
            - "Lint"
            - "FindBugs"
          filters:
            branches:
              only: master
      - "Deploy HockeyApp":
          requires:
            - "Make Dependencies"
            - "Build App"
            - "Unit Tests"
            - "CheckStyle"
            - "PMD"
            - "Lint"
            - "FindBugs"
          filters:
            branches:
              only: master